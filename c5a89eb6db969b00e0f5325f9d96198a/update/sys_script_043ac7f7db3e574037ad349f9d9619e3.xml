<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_req_item</collection>
        <condition/>
        <description>This Business Rule triggers when RITM moves to closure to update the Request state accordingly</description>
        <execute_function>false</execute_function>
        <filter_condition table="sc_req_item">state=3^ORstate=4^cat_item=b64fe0ecdbe21b0037ad349f9d9619e3^ORcat_item=d863b2b7dbd0730037ad349f9d961914^ORcat_item=4de9b051db64370037ad349f9d96195b^ORcat_item=c92d681cdb64b300e0f5325f9d9619cf^EQ<item display_value="Closed Complete" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="3"/>
            <item display_value="Closed Incomplete" endquery="false" field="state" goto="false" newquery="false" operator="=" or="true" value="4"/>
            <item display_table="sc_cat_item" display_value="Kyndryl Marketplace Provision" endquery="false" field="cat_item" goto="false" newquery="false" operator="=" or="false" value="b64fe0ecdbe21b0037ad349f9d9619e3"/>
            <item display_table="sc_cat_item" display_value="Kyndryl Marketplace Provisioning Request" endquery="false" field="cat_item" goto="false" newquery="false" operator="=" or="true" value="d863b2b7dbd0730037ad349f9d961914"/>
            <item display_table="sc_cat_item" display_value="Kyndryl Marketplace Start/Stop/Restart Request" endquery="false" field="cat_item" goto="false" newquery="false" operator="=" or="true" value="4de9b051db64370037ad349f9d96195b"/>
            <item display_table="sc_cat_item" display_value="Kyndryl Marketplace Decommission CI Request" endquery="false" field="cat_item" goto="false" newquery="false" operator="=" or="true" value="c92d681cdb64b300e0f5325f9d9619cf"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Request Status</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/** 
 * @copyright (c) Copyright Kyndryl Corporation 2021, 2021. All Rights Reserved. 
 * @license Licensed Materials - Property of Kyndryl * Note to U.S. Government Users Restricted Rights: Use, duplication or disclosure restricted by GSA ADP 
 * Schedule Contract with Kyndryl Corp. 
 * @Business Rule triggers when RITM moves to closure to update the Request state accordingly
 **/

(function executeRule(current, previous /*null when async*/ ) {
    try {
        var req = new GlideRecord('sc_request');
        req.addQuery('sys_id', current.request);
        req.query();
        if (req.next()) {
			
            var reqItem = new GlideAggregate('sc_req_item');
            reqItem.addQuery('request', current.request);
            reqItem.addAggregate("COUNT");
            reqItem.query();
			var totalRITMS = 0;
            if (reqItem.next()) {//no need of while..only reqItem.next() will work
                totalRITMS = reqItem.getAggregate("COUNT");
            }

            var reqState = new GlideAggregate('sc_req_item');
            reqState.addQuery('request', current.request);
            reqState.addQuery('state', 'IN', '3,4');
            reqState.addAggregate('COUNT');
            reqState.query();
			var count = 0;
            while (reqState.next()) {//no need of while here you can just write reqState.next()
                count = parseInt(reqState.getAggregate('COUNT'));//no need of parseInt i think
            }

            if (count == totalRITMS) {
                req.request_state = 'closed_complete';
                new EmpLogLevel().logMsg('info', 'Request ' + req.number + ' closed for order : ' + req.x_ibmg3_hcms_order_number);
                req.update();
            }
        }
    } catch (e) {
        new EmpLogLevel().logMsg("error", " Error completing Request " + e);
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>sridharp@us.ibm.com</sys_created_by>
        <sys_created_on>2018-06-26 21:39:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>043ac7f7db3e574037ad349f9d9619e3</sys_id>
        <sys_mod_count>61</sys_mod_count>
        <sys_name>Update Request Status</sys_name>
        <sys_overrides/>
        <sys_package display_value="Kyndryl Modern Operations Applications Integration" source="x_ibmg3_hcms">c5a89eb6db969b00e0f5325f9d96198a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Kyndryl Modern Operations Applications Integration">c5a89eb6db969b00e0f5325f9d96198a</sys_scope>
        <sys_update_name>sys_script_043ac7f7db3e574037ad349f9d9619e3</sys_update_name>
        <sys_updated_by>sreedhar.mamilla@kyndryl.com</sys_updated_by>
        <sys_updated_on>2024-05-28 07:17:23</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=043ac7f7db3e574037ad349f9d9619e3"/>
</record_update>
