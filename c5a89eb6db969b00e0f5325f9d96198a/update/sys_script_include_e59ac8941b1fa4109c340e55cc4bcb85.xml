<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmg3_hcms.ProvisioningCallToEmMarketplace</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>/** &#13;
* @copyright (c) Copyright Kyndryl Corporation 2021, 2021. All Rights Reserved. &#13;
* @license Licensed Materials - Property of Kyndryl * Note to U.S. Government Users Restricted Rights: Use, duplication or disclosure restricted by GSA ADP &#13;
* Schedule Contract with Kyndryl Corp.&#13;
* @author Asha Bagade &#13;
* @Script Include is invoked from BRs  - This script include is used to send prov call to EM&#13;
**/</description>
        <name>ProvisioningCallToEmMarketplace</name>
        <script><![CDATA[var ProvisioningCallToEmMarketplace = Class.create();
ProvisioningCallToEmMarketplace.prototype = {
    initialize: function() {},

    provisionStatus: function(chgTsk) {
        try {
            //invoking rest outbound message	
            //Define variables to hold response body and status code
            var responseBody, statusCode, endPoint = '';
            var restMethodName = gs.getProperty('x_ibmg3_hcms.provisioning.rest.method');
            //Fetch the source url and credential details from SR create payload
            var requestPayload = chgTsk.change_request.parent.variables.var_broker_json;
            var jsonPayload = JSON.parse(requestPayload);

            var url = jsonPayload.source;
            var credential = jsonPayload.credential;
			var reqOrderNumber = jsonPayload.orderNumber;

            //array to hold the serviceOfferingInstanceId
            var serviceInstanceId = chgTsk.change_request.parent.variables.var_service_instance_id.toString();
           
            //variable to hold the status of ritm
            var state;
            if (chgTsk.state == 3) {
                state = "Completed";
            }
            if (chgTsk.state == 4) {
                state = "Cancelled";
            }

            if (chgTsk.state == -5) {
                state = "Failed";
            }

            //build request body
            var reqBody = {};
            reqBody.changeTaskId = chgTsk.number.toString();
            reqBody.orderNumber = chgTsk.change_request.parent.request.x_ibmg3_hcms_order_number.toString();
            reqBody.serviceInstanceId = serviceInstanceId;
            reqBody.status = state;

            var jsonString = JSON.stringify(reqBody);
            new EmpLogLevel().logMsg("info", "ChangeTask " + chgTsk.number + " Closed (Provisioning) Status to EM : " + jsonString);

            //Invoke the below function to make an outbound call to Kyndryl Marketplace for sending post prov hook reponse
			var reqDomain = new EmpGetTenatDetails().getRequestDomain(reqOrderNumber);
            var provChangeTask = new EmpConfigurationOutboundCall().outBoundRestCallToEmp(restMethodName, credential, url, reqBody, reqDomain);
            if (provChangeTask) {
                responseBody = provChangeTask.responseBody;
                statusCode = provChangeTask.statusCode;
                endPoint = provChangeTask.endPoint;
            } else {
                new EmpLogLevel().logMsg("info", "* Invalid response from Kyndryl Marketplace for  *" + chgTsk.change_request.parent.request.x_ibmg3_hcms_order_number);
            }
            new EmpLogLevel().logMsg("info", "Change Task " + chgTsk.number + " Closed (Provisioning) Status response from EM : " + chgTsk.change_request.parent.request.x_ibmg3_hcms_order_number + " is :" + responseBody + " \nhttpStatus: " + statusCode + " \nEndpoint : " + endPoint);

            //Create record in ecc queue for unsuccessful outbound call
            if (statusCode > 201 || statusCode == 0) {
                var topic = chgTsk.change_request.parent.request.x_ibmg3_hcms_order_number.toString() + "-Provisioning";
                var source = chgTsk.change_request.parent.request.getDisplayValue().toString();
                var responseFromHost = "Response received from Enterprise Marketplace : " + responseBody + " \nResponse status code : " + statusCode;
                //Call retry function
                var ecc = new RetryOutboundCallToEmp().eccQueueRetryRecord(topic, source, jsonString, responseFromHost);
            }
        } catch (e) {
            new EmpLogLevel().logMsg("error", "Sending Post Provisioning Hook Status to Enterprise Marketplace error " + e);
        }
    },


    type: 'ProvisioningCallToEmMarketplace'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>debada54@in.ibm.com</sys_created_by>
        <sys_created_on>2021-03-30 12:30:32</sys_created_on>
        <sys_id>e59ac8941b1fa4109c340e55cc4bcb85</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>ProvisioningCallToEmMarketplace</sys_name>
        <sys_package display_value="Kyndryl Modern Operations Applications Integration" source="x_ibmg3_hcms">c5a89eb6db969b00e0f5325f9d96198a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Kyndryl Modern Operations Applications Integration">c5a89eb6db969b00e0f5325f9d96198a</sys_scope>
        <sys_update_name>sys_script_include_e59ac8941b1fa4109c340e55cc4bcb85</sys_update_name>
        <sys_updated_by>namrata.chakraborty@kyndryl.com</sys_updated_by>
        <sys_updated_on>2024-05-28 09:28:55</sys_updated_on>
    </sys_script_include>
</record_update>
