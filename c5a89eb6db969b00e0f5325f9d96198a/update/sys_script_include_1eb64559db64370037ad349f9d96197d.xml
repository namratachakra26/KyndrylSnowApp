<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmg3_hcms.EmpOperationsValidations</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>/** &#13;
* @copyright (c) Copyright Kyndryl Corporation 2021, 2021. All Rights Reserved. &#13;
* @license Licensed Materials - Property of Kyndryl * Note to U.S. Government Users Restricted Rights: Use, duplication or disclosure restricted by GSA ADP &#13;
* Schedule Contract with Kyndryl Corp. &#13;
* @author Asha Bagade &#13;
* @Script Include  contains all the Individual functions from the requested item workflow for Day2 operations (START/STOP/RESTART) invoked from workflow "HCMS Operations Start/Stop/Reboot WF"&#13;
**/</description>
        <name>EmpOperationsValidations</name>
        <script><![CDATA[var EmpOperationsValidations = Class.create();
EmpOperationsValidations.prototype = {
    initialize: function() {},

    validateResourceName: function(reqBody) {
        try {
            var resourceId = '';
            for (var i = 0; i < reqBody.requestedItems.length; i++) {
                var itemServiceName = reqBody.requestedItems[i].serviceName;
                var itemPropertiesArray = reqBody.requestedItems[i].itemProperties;
                for (var j = 0; j < itemPropertiesArray.length; j++) {
                    if ((itemPropertiesArray[j].propertyGroupInfo) == "$operation") {
                        var propertiesArray = itemPropertiesArray[j].properties;
                        for (var k = 0; k < propertiesArray.length; k++) {
                            if ((propertiesArray[k].name) == "resourceId") {
                                resourceId = propertiesArray[k].value;
                                new EmpLogLevel().logMsg("info", "resourceId for start/stop/reboot: " + resourceId);
                            }
                        }
                    }
                }
            }
            if (resourceId) { //check if ci exists
                var getCI = new GlideRecord('cmdb_ci_vm_object');
                var qry = 'object_id=' + resourceId + '^ORref_cmdb_ci_vmware_instance.vm_instance_uuid=' + resourceId;
                getCI.addEncodedQuery(qry);
                getCI.query();
                if (getCI.next()) {
                    new EmpLogLevel().logMsg("info", "ResourceName for start/stop/reboot: exists in  vmware_instance " + getCI.sys_id);
                    return getCI.sys_id;
                } else
                    return "";
            } else
                return "";
        } catch (err) {
            workflow.error("Kyndryl Marketplace Provision ResourceName: validateResourceName : " + err);
        }
    },
    type: 'EmpOperationsValidations'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>vinverm7@in.ibm.com</sys_created_by>
        <sys_created_on>2019-03-31 14:27:20</sys_created_on>
        <sys_id>1eb64559db64370037ad349f9d96197d</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>EmpOperationsValidations</sys_name>
        <sys_package display_value="Kyndryl Modern Operations Applications Integration" source="x_ibmg3_hcms">c5a89eb6db969b00e0f5325f9d96198a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Kyndryl Modern Operations Applications Integration">c5a89eb6db969b00e0f5325f9d96198a</sys_scope>
        <sys_update_name>sys_script_include_1eb64559db64370037ad349f9d96197d</sys_update_name>
        <sys_updated_by>sreedhar.mamilla@kyndryl.com</sys_updated_by>
        <sys_updated_on>2024-05-28 07:38:46</sys_updated_on>
    </sys_script_include>
</record_update>
